<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIAkAAAEAIADMBAAAFgAAACgAAAAgAAAAEgAAAAEAIAAAAAAAgAQAAMMOAADDDgAAAAAAAAAA
        AAAHBwfTBgYG3wQEBPcLCwvYCwsL1AsLC9QLCwvUCwsL1AsLC9QLCwvUCwsL1AoKCtkFBQX1CwsL2gsL
        C9QLCwvUCwsL1AsLC9QLCwvUCwsL1wUFBfUKCgrdCQkJ0gUFBc4KCgrTCwsL1AsLC9QLCwvUCgoK2AUF
        BfUKCgrcCwsL0y0tLRMYGBhSDg4O0jg4OCw6OjoWOjo6Fzo6Ohc6OjoXOjo6Fzo6Ohc8PDwVKioqNBIS
        Ess7Ozs6SEhIFUZGRxdGRkYXRkZGF0ZGRxZEREQqEhISxhwcHEU2NjYTGRkZEzY2NhY6OjoXOjo6Fzw8
        PBYrKystDg4OyCoqKkBAQEAUNzc3ejIyMp0eHh7lPDw8iD09PXs+Pj58Pj4+fD09PXw+Pj58Pj4+fD4+
        Pns4ODiMFhYW4hoaGpAYGBh7GBgYfBwbG3wZGRh8GBgYexsaG4cTExPfMjIylj8/P3s+Pj59Pj4+fD4+
        Pnw+Pj58Pj4+ezk5OYgeHh7gNzc3kzg4OHo4ODj/S0tL/0lJSf9JSUn/SUlJ/0pKSv9JSUn/SUlJ/0pK
        Sv9KSkr/SUlJ/0lJSf8kJCT/AAAA/wwLC/8gHx3/IB4b/yAfHP8QDw7/AAAA/xwcHP9ISEj/SUlJ/0pK
        Sv9ISEj/SEhI/0hISP9ISEj/SEhI/0hISP9KSkr/PDw8/zs7O/9PT0//TU1N/01NTf9NTU3/T09P/05O
        Tv9NTU3/Tk5O/09PT/9NTU3/TU1N/yYmJv8FBQT/Liwp/zItJv9VSjr/NjEo/zAuKv8KCQj/HR0d/01N
        Tf9OTk7/Tk5O/01NTf9NTU3/TU1N/01NTf9NTU3/TU1N/05OTv8/Pz//Ozs7/09PT/9OTk7/TU1N/01N
        Tf9PT0//Tk5O/01NTf9OTk7/T09P/05OTv9OTk7/JSUl/xIREP8hHhv/kXlV//i3Vf+pi13/Ih8b/xkX
        Ff8dHBz/TU1N/05OTv9OTk7/TU1N/01NTf9NTU3/TU1N/01NTf9NTU3/T09P/z8/P/87Ozv/T09P/01N
        Tf9NTU3/TU1N/09PT/9OTk7/TU1N/05OTv9PT0//Tk5O/05OTv8lJSX/Dg0M/yclIf9mV0H/xJpb/3hm
        Sv8nJCD/FRQS/x0dHP9NTU3/Tk5O/05OTv9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9PT0//Pz8//zw8
        PP9QUFD/Tk5O/05OTv9OTk7/UFBQ/09PT/9OTk7/T09P/1BQUP9OTk7/T09P/yYmJv8AAAD/JCMh/ykm
        I/8nJSD/KSYi/ygnJP8DAgL/Hh4e/05OTv9PT0//T09P/05OTv9OTk7/Tk5O/05OTv9OTk7/Tk5O/1BQ
        UP9AQED/Ly8v/z8/P/89PT3/PT09/z09Pf8+Pj7/PT09/zw8PP8+Pj7/Pj4+/z09Pf89PT3/Hh4e/wAA
        AP8CAgH/Dw4N/xYVFP8REA//AwMC/wAAAP8XFxf/PDw8/z09Pf8+Pj7/PDw8/z09Pf89PT3/PDw8/zw8
        PP89PT3/Pj4+/zMzM/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>